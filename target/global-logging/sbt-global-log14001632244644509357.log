[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\andre\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\andre\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.5)
[debug]       Load.loadUnit: plugins took 84.9963ms
[debug]       Load.loadUnit: defsScala took 0.2788ms
[debug] [Loading] Scanning directory C:\Users\andre\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\andre\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.661 ms
[debug]           Load.resolveProject(global-plugins) took 40.7499ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\andre\.sbt\1.0\plugins, plugins: List(<none>))) took 75.6527ms
[debug] [Loading] Done in C:\Users\andre\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 95.889ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2362ms
[debug]     Load.loadUnit(file:/C:/Users/andre/.sbt/1.0/plugins/, ...) took 190.2437ms
[debug]   Load.apply: load took 356.2304ms
[debug]   Load.apply: resolveProjects took 6.9829ms
[debug]   Load.apply: finalTransforms took 54.575ms
[debug]   Load.apply: config.delegates took 7.056ms
[debug]   Load.apply: Def.make(settings)... took 629.0666ms
[debug]   Load.apply: structureIndex took 168.4622ms
[debug]   Load.apply: mkStreams took 1.7218ms
[info] loading global plugins from C:\Users\andre\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6235.5339ms
[debug]           Load.loadUnit: plugins took 24.9624ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory F:\Progetti\Lab_PPS\pps-22-23-lab02\project
[debug]             Load.loadUnit: mkEval took 5.0722ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab02\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2662 ms
[info] loading settings for project pps-22-23-lab02-build from idea.sbt ...
[debug]               Load.resolveProject(pps-22-23-lab02-build) took 5.0014ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pps-22-23-lab02-build, base: F:\Progetti\Lab_PPS\pps-22-23-lab02\project, plugins: List(<none>))) took 6.6612ms
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab02\project, returning: (pps-22-23-lab02-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2066.7513ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5567ms
[debug]         Load.loadUnit(file:/F:/Progetti/Lab_PPS/pps-22-23-lab02/project/, ...) took 2096.9275ms
[debug]       Load.apply: load took 2097.9796ms
[debug]       Load.apply: resolveProjects took 0.0693ms
[debug]       Load.apply: finalTransforms took 8.6236ms
[debug]       Load.apply: config.delegates took 0.2601ms
[debug]       Load.apply: Def.make(settings)... took 73.5736ms
[debug]       Load.apply: structureIndex took 22.9059ms
[debug]       Load.apply: mkStreams took 0.0016ms
[info] loading project definition from F:\Progetti\Lab_PPS\pps-22-23-lab02\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3370.8136ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory F:\Progetti\Lab_PPS\pps-22-23-lab02
[debug]       Load.loadUnit: mkEval took 0.1811ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab02, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5598 ms
[info] loading settings for project pps-22-23-lab02 from build.sbt ...
[debug]         Load.resolveProject(pps-22-23-lab02) took 27.433ms
[debug]       Load.loadTransitive: finalizeProject(Project(id pps-22-23-lab02, base: F:\Progetti\Lab_PPS\pps-22-23-lab02, plugins: List(<none>))) took 29.9375ms
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab02, returning: (pps-22-23-lab02)
[debug]     Load.loadUnit: loadedProjectsRaw took 817.0676ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.7664ms
[debug]   Load.loadUnit(file:/F:/Progetti/Lab_PPS/pps-22-23-lab02/, ...) took 4195.268ms
[debug] Load.apply: load took 4196.652ms
[debug] Load.apply: resolveProjects took 0.0963ms
[debug] Load.apply: finalTransforms took 23.5639ms
[debug] Load.apply: config.delegates took 0.245ms
[debug] Load.apply: Def.make(settings)... took 67.9705ms
[debug] Load.apply: structureIndex took 18.722ms
[debug] Load.apply: mkStreams took 0.0015ms
[info] set current project to pps-22-23-lab02 (in build file:/F:/Progetti/Lab_PPS/pps-22-23-lab02/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49922 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49922, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pps-22-23-lab02 (in build file:/F:/Progetti/Lab_PPS/pps-22-23-lab02/)
[debug] > Exec(idea-shell, None, None)
